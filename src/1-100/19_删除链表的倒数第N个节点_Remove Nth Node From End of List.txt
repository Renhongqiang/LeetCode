/*
给定一个链表，删除链表的倒数第 n 个节点，并且返回链表的头结点。

示例：

给定一个链表: 1->2->3->4->5, 和 n = 2.

当删除了倒数第二个节点后，链表变为 1->2->3->5.
说明：

给定的 n 保证是有效的。
*/

/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
class Solution {
    public ListNode removeNthFromEnd(ListNode head, int n) {
        ListNode headNode,n1,n2;
        headNode = new ListNode(0);
        headNode.next  =head;
        n1 = headNode;
        n2 = headNode;
        for(int i = 1; i <= n + 1 ; i++)
        {
            n2 = n2.next;
        }
        while(n2 != null)
        {
            n1 = n1.next;
            n2 = n2.next;
        }
        n1.next = n1.next.next;
        return headNode.next;
    }
}